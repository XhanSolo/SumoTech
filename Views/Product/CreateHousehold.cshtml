@model SumoTech.Entity.HouseHold

@{
    ViewBag.Title = "CreateHousehold";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

    <div class="container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-wrapper">
            <h2 class="form-header">Create HouseHold Applience</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-element", placeholder = "Enter the Brand" } })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-element", placeholder = "Enter the Name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-element", placeholder = "Enter the Price" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    <textarea id="Description" name="Description" class="form-element" cols="30" rows="10" placeholder="Enter the Description"></textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Production_year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Production_year, new { htmlAttributes = new { @class = "form-element", placeholder = "Enter the Production Year" } })
                    @Html.ValidationMessageFor(model => model.Production_year, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Factoryid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Factoryid" name="Factoryid" class="form-element">
                        @foreach (var i in ViewBag.factories)
                        {
                            <option value="@i.Id">@i.Id</option>
                        }
                    </select>
                </div>
            </div>
            <!--
    <div class="form-group">
        @Html.LabelFor(model => model.Factoryid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Factoryid, new { htmlAttributes = new { @class = "form-element", placeholder = "Enter the Factory" } })
            @Html.ValidationMessageFor(model => model.Factoryid, "", new { @class = "text-danger" })
        </div>
    </div>
        -->
            <div class="form-group">
                @Html.LabelFor(model => model.ApplienceType, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <select id="ApplienceType" name="ApplienceType" class="form-element">
                        <option value="Fridge">Fridge</option>
                        <option value="Owen">Owen</option>
                        <option value="Washer">Washer</option>
                        <option value="Dish Washer">Dish Washer</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplienceProductivity, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-10">
                    <select id="ApplienceProductivity" name="ApplienceProductivity" class="form-element">
                        <option value="A++">A++</option>
                        <option value="A+">A+</option>
                        <option value="A">A</option>
                        <option value="B">B</option>
                        <option value="C">C</option>
                        <option value="D">D</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                </div>
            </div>
        </div>
        }
    </div>